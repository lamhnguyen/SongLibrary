- Hosts file
    - 127.0.0.1       songlibrary-dev.net
- Authen0
    - SongLibray app
        - Domain: songlibrary-dev@auth0.net
        - ClientId: Jct5m9l8dLC4MIZyUO77QBvYXHeQxYaq
        - App type: Single Page Application
        - Login Url: http://SongLibray.net/Login
        - Callback Url: http://SongLibray.net/callback
        - Logout Urls: http://SongLibray.net
        - Allowed web origins: http://SongLibray.net - 
    - OAuth terminologies
        - Resource owner: end user
        - Client: Application
        - Resource Server: Api
        - Authorization Server: Auth0 (authenticate the Resource Owner & issues Access Tokens)
        - User Agent: Browser or Native app (used by the Resource Owner to interact with the Client)
    - Key decisions:
        - OAuth flow (ways of retrieving an Access Token): Implicit Grant (the app DIRECTLY retrieves an Access Token/SPA)
        - Login/signup implementation: Universal (hosted by Auth0)
        - Storing tokens: Local Storage (for simplicity)
    - Add roles claim rule: to include the roles to the JWT token
        function (user, context, callback) {
            user.app_metadata = user.app_metadata || {};
        
            const assignedRoles = (context.authorization || {}).roles;
            user.app_metadata.roles = assignedRoles || [];
            
            const namespace = 'http://songlibrary.net/';
            context.idToken[namespace + 'app_metadata'] = user.app_metadata;
        
            return callback(null, user, context);
        }
- Api server authentication
    - https://travishorn.com/api-server-with-jwt-authentication-6bb4985c5253
- Install FontAwesome (https://github.com/FortAwesome/react-fontawesome)
    - npm i --save @fortawesome/fontawesome-svg-core  @fortawesome/free-solid-svg-icons @fortawesome/react-fontawesome

- References
    - Centralized Error Handing with React and Redux - Manujith Pallewatte (https://app.pluralsight.com/guides/centralized-error-handing-with-react-and-redux)
    - Understanding React + Redux Errors With Sentry and FullStory - Patrick Brandt (https://bionic.fullstory.com/react-redux-errors-with-fullstory-and-sentry/)
    - Eloquent Javascript book (https://eloquentjavascript.net/index.html)
    - React - Apply classes conditionally (https://www.pluralsight.com/guides/applying-classes-conditionally-react)
    - React Confirm Dialog as a service - Alexys Gonzales (https://medium.com/quadminds/react-confirm-dialog-as-service-8929c88a6702)
    - How can I display a modal dialog in Redux that performs asynchronous actions? - Dan Abramov (https://stackoverflow.com/questions/35623656/how-can-i-display-a-modal-dialog-in-redux-that-performs-asynchronous-actions)
    - How to reset the state of a Redux store? - Dan Abramov (https://stackoverflow.com/questions/35622588/how-to-reset-the-state-of-a-redux-store)
    - Async JavaScript: From Callbacks, to Promises, to Async/Await - Tyler McGinnis (https://tylermcginnis.com/async-javascript-from-callbacks-to-promises-to-async-await/)
    - React Hooks cheat sheet: Unlock solutions to common problems - Ohans Emmanuel (https://blog.logrocket.com/react-hooks-cheat-sheet-unlock-solutions-to-common-problems-af4caf699e70/)
    - Building forms using React â€” everything you need to know - Manjunath (https://www.codementor.io/@blizzerand/building-forms-using-react-everything-you-need-to-know-iz3eyoq4y)
    - Clean Code vs. Dirty Code: React Best Practices - Donavon West (https://americanexpress.io/clean-code-dirty-code/)